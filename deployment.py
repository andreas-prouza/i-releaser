
import datetime
import json
import logging
import argparse

from etc import logger_config, constants
from modules import meta_file, deploy_version


#################################################################
# Parser settings
#################################################################

parser = argparse.ArgumentParser(
  prog='Deployment tool',
  description='Find detailed description in README.md'
)

parser.add_argument('-r', '--run', help='Run stage', required=False, action='store_true')
parser.add_argument('-d', '--deploy_version', help='Version of deployment', required=False)
parser.add_argument('-s', '--stage', help='Name of the stage to process', required=False)
parser.add_argument('-c', '--create', help='Creates a new deployment. Workflow (-w/--workflow) and object file list (-o/--object_file_list) is neseccary', required=False, action='store_true')
parser.add_argument('-w', '--workflow', help='Name of the workflow to use for the deplyoment, defined in ./etc/workflow.json', required=False)
parser.add_argument('-o', '--object_file_list', help='Object file list (generated by GNU make)', required=False)

args = parser.parse_args()

print(vars(args))

if args.create and (args.workflow is None or args.object_file_list is None):
  parser.error("To create a deployment parameters workflow (-w) and object_file_list (-o) are required")

if args.run and (args.stage is None or args.deploy_version):
  parser.error("To run a deployment parameters stage (-s) and deploy_version (-d) are required")

if not args.run and not args.create:
  parser.error("An action needs to be defined: Run stage (-r) or create a deployment (-c)")


exit(0)
#################################################################

logging.debug(f"{args.workflow=}, {args.object_file_list}")

mf = meta_file.Meta_File(workflow_name=args.workflow)
mf.import_objects_from_config_file(args.object_file_list)
mf.set_status(meta_file.Meta_file_status.READY)
mf.write_meta_file()

mf.set_status(meta_file.Meta_file_status.IN_PROCESS)
